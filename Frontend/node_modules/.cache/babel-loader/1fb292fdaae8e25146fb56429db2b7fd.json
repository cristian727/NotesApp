{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/Visual Studio/JavaScript/MERN Stack/mern-crud-tasks/frontend/src/components/CreateNote.js\";\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nexport default class CreateNote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: '',\n      date: new Date(),\n      userSelected: '',\n      users: [],\n      editing: false,\n      _id: ''\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n\n      if (this.state.editing) {\n        const updatedNote = {\n          title: this.state.title,\n          content: this.state.content,\n          author: this.state.userSelected,\n          date: this.state.date\n        };\n        await axios.put('http://localhost:4000/api/notes/' + this.state._id, updatedNote);\n      } else {\n        const newNote = {\n          title: this.state.title,\n          content: this.state.content,\n          author: this.state.userSelected,\n          date: this.state.date\n        };\n        axios.post('http://localhost:4000/api/notes', newNote);\n      }\n\n      window.location.href = '/';\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onChangeDate = date => {\n      this.setState({\n        date\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const res = await axios.get('http://localhost:4000/api/users');\n\n    if (res.data.length > 0) {\n      this.setState({\n        users: res.data.map(user => user.username),\n        userSelected: res.data[0].username\n      });\n    }\n\n    if (this.props.match.params.id) {\n      console.log(this.props.match.params.id);\n      const res = await axios.get('http://localhost:4000/api/notes/' + this.props.match.params.id);\n      console.log(res.data);\n      this.setState({\n        title: res.data.title,\n        content: res.data.content,\n        date: new Date(res.data.date),\n        userSelected: res.data.author,\n        _id: res.data._id,\n        editing: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Create a Note\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      value: this.state.userSelected,\n      onChange: this.onInputChange,\n      name: \"userSelected\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.users.map(user => React.createElement(\"option\", {\n      key: user,\n      value: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, user)))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Title\",\n      onChange: this.onInputChange,\n      name: \"title\",\n      value: this.state.title,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Content\",\n      name: \"content\",\n      onChange: this.onInputChange,\n      value: this.state.content,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      className: \"form-control\",\n      selected: this.state.date,\n      onChange: this.onChangeDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Save \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"assignment\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/cristian/Documents/Visual Studio/JavaScript/MERN Stack/mern-crud-tasks/frontend/src/components/CreateNote.js"],"names":["React","Component","DatePicker","axios","CreateNote","state","title","content","date","Date","userSelected","users","editing","_id","onSubmit","e","preventDefault","updatedNote","author","put","newNote","post","window","location","href","onInputChange","setState","target","name","value","onChangeDate","componentDidMount","res","get","data","length","map","user","username","props","match","params","id","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport axios from 'axios'\n\nexport default class CreateNote extends Component {\n\n    state = {\n        title: '',\n        content: '',\n        date: new Date(),\n        userSelected: '',\n        users: [],\n        editing: false,\n        _id: ''\n    }\n\n    async componentDidMount() {\n        const res = await axios.get('http://localhost:4000/api/users');\n        if (res.data.length > 0) {\n            this.setState({\n                users: res.data.map(user => user.username),\n                userSelected: res.data[0].username\n            })\n        }\n        if (this.props.match.params.id) {\n            console.log(this.props.match.params.id)\n            const res = await axios.get('http://localhost:4000/api/notes/' + this.props.match.params.id);\n            console.log(res.data)\n            this.setState({\n                title: res.data.title,\n                content: res.data.content,\n                date: new Date(res.data.date),\n                userSelected: res.data.author,\n                _id: res.data._id,\n                editing: true\n            });\n        }\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        if (this.state.editing) {\n            const updatedNote = {\n                title: this.state.title,\n                content: this.state.content,\n                author: this.state.userSelected,\n                date: this.state.date\n            };\n            await axios.put('http://localhost:4000/api/notes/' + this.state._id, updatedNote);\n        } else {\n            const newNote = {\n                title: this.state.title,\n                content: this.state.content,\n                author: this.state.userSelected,\n                date: this.state.date\n            };\n            axios.post('http://localhost:4000/api/notes', newNote);\n        }\n        window.location.href = '/';\n\n    }\n\n    onInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onChangeDate = date => {\n        this.setState({ date });\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-6 offset-md-3\">\n                <div className=\"card card-body\">\n                    <h4>Create a Note</h4>\n                    <form onSubmit={this.onSubmit}>\n                        {/* SELECT THE USER */}\n                        <div className=\"form-group\">\n                            <select\n                                className=\"form-control\"\n                                value={this.state.userSelected}\n                                onChange={this.onInputChange}\n                                name=\"userSelected\"\n                                required>\n                                {\n                                    this.state.users.map(user => (\n                                        <option key={user} value={user}>\n                                            {user}\n                                        </option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                        {/* Note Title */}\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Title\"\n                                onChange={this.onInputChange}\n                                name=\"title\"\n                                value={this.state.title}\n                                required />\n                        </div>\n                        {/* Note Content */}\n                        <div className=\"form-group\">\n                            <textarea\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Content\"\n                                name=\"content\"\n                                onChange={this.onInputChange}\n                                value={this.state.content}\n                                required>\n                            </textarea>\n                        </div>\n                        {/* Note Date */}\n                        <div className=\"form-group\">\n                            <DatePicker className=\"form-control\" selected={this.state.date} onChange={this.onChangeDate} />\n                        </div>\n                        <button className=\"btn btn-primary\">\n                            Save <i className=\"material-icons\">\n                                assignment\n</i>\n                        </button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}